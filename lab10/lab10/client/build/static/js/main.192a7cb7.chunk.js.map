{"version":3,"sources":["components/Header.js","components/Filters.js","components/TodoItem.js","components/TodoList.js","components/TodoForm.js","api/Task.js","api/API.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","Navbar","bg","variant","expand","fixed","Toggle","aria-controls","aria-expanded","aria-label","onClick","showSidebar","Brand","to","className","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","Form","inline","role","FormControl","type","placeholder","Nav","Link","href","Filters","createProject","project","ListGroup","Item","action","key","active","activeFilter","filterTasks","this","id","projects","map","React","Component","TodoItem","task","editTask","deleteTask","updateTask","important","defaultChecked","completed","onChange","ev","target","checked","onChangeTask","htmlFor","description","privateTask","deadline","isBefore","moment","format","Image","src","alt","TodoList","tasks","as","TodoForm","updateField","name","value","setState","handleSubmit","event","preventDefault","form","currentTarget","checkValidity","Object","assign","state","deadlineDate","deadlineTime","addOrEditTask","toggleModal","reportValidity","modalOpen","Modal","show","onHide","animation","closeButton","Title","method","onSubmit","Body","Group","controlId","Label","Control","required","autoFocus","Check","label","Footer","Button","Task","undefined","Date","json","t","filter","a","url","fetch","response","tasksJson","ok","Promise","resolve","reject","baseURL","headers","body","JSON","stringify","then","obj","catch","err","errors","param","msg","taskId","API","getTasks","addTask","App","editedTask","openMobileMenu","getProjects","errorObj","Set","Container","fluid","Row","Collapse","in","Col","sm","path","size","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.192a7cb7.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Nav from 'react-bootstrap/Nav';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nconst Header = (props) => {\n\n  return(\n    <Navbar bg=\"success\" variant=\"dark\" expand=\"sm\" fixed=\"top\">\n      <Navbar.Toggle aria-controls=\"left-sidebar\" aria-expanded=\"false\" aria-label=\"Toggle sidebar\" onClick={props.showSidebar}/>\n      \n      <Navbar.Brand >\n        <Link to='/'>\n      <svg className=\"bi bi-check-all\" width=\"30\" height=\"30\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fillRule=\"evenodd\" d=\"M12.354 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L5 10.293l6.646-6.647a.5.5 0 01.708 0z\" clipRule=\"evenodd\"/>\n          <path d=\"M6.25 8.043l-.896-.897a.5.5 0 10-.708.708l.897.896.707-.707zm1 2.414l.896.897a.5.5 0 00.708 0l7-7a.5.5 0 00-.708-.708L8.5 10.293l-.543-.543-.707.707z\"/>\n        </svg>\n        ToDO Manager\n        </Link>\n      </Navbar.Brand>\n      \n      <Form inline className=\"my-2 my-lg-0 mx-auto d-none d-sm-block\" role=\"search\">\n        <FormControl type=\"search\" className=\"mr-sm-2\" placeholder=\"Search\" aria-label=\"Search query\" />\n      </Form>\n\n      <Nav className=\"ml-md-auto\">\n        <Nav.Link href=\"#\">\n        <svg className=\"bi bi-people-circle\" width=\"30\" height=\"30\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 008 15a6.987 6.987 0 005.468-2.63z\"/>\n            <path fillRule=\"evenodd\" d=\"M8 9a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"/>\n            <path fillRule=\"evenodd\" d=\"M8 1a7 7 0 100 14A7 7 0 008 1zM0 8a8 8 0 1116 0A8 8 0 010 8z\" clipRule=\"evenodd\"/>\n          </svg>\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nclass Filters extends React.Component {\n    createProject = (project) => {\n        return (\n            <ListGroup.Item action key = {`#${project}`} active = {this.props.activeFilter === project ? true : false} onClick = {() => {this.props.filterTasks('filter-project', project);}}>{project}</ListGroup.Item>\n        );\n    }\n\n    render() {\n        return (\n            <>\n                <ListGroup  variant=\"flush\">\n                    <ListGroup.Item action key = \"#all\" active = {this.props.activeFilter === \"All\" ? true : false} id = \"filter-all\" onClick = {() => {this.props.filterTasks('filter-all');}}>All</ListGroup.Item>\n                    <ListGroup.Item action key = \"#important\" active = {this.props.activeFilter === \"Important\" ? true : false} id = \"filter-important\" onClick = {() => {this.props.filterTasks('filter-important');}}>Important</ListGroup.Item>\n                    <ListGroup.Item action key = \"#today\" active = {this.props.activeFilter === \"Today\" ? true : false} id = \"filter-today\" onClick = {() => {this.props.filterTasks('filter-today');}}>Today</ListGroup.Item>\n                    <ListGroup.Item action key = \"#week\" active = {this.props.activeFilter === \"Next Week\" ? true : false} id = \"filter-week\" onClick = {() => {this.props.filterTasks('filter-week');}}>Next 7 Days</ListGroup.Item>\n                    <ListGroup.Item action key = \"#private\" active = {this.props.activeFilter === \"Private\" ? true : false} id = \"filter-private\" onClick = {() => {this.props.filterTasks('filter-private');}}>Private</ListGroup.Item>\n                    <ListGroup.Item action key = \"#shared\" active = {this.props.activeFilter === \"Shared\" ? true : false} id = \"filter-shared\" onClick = {() => {this.props.filterTasks('filter-shared');}}>Shared With...</ListGroup.Item>\n                    <ListGroup.Item className=\"p-3 mt-5 list-title\">Projects</ListGroup.Item>\n                    {this.props.projects.map(this.createProject) }\n                </ListGroup>\n            </>\n        );\n    }\n}\n\nexport default Filters;\n","import React from 'react';\nimport moment from 'moment';\nimport Image from 'react-bootstrap/Image';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst TodoItem = (props) => {\n\n  let {task, editTask, deleteTask, updateTask} = props;\n\n  const onChangeTask = (ev,task) => {\n    if(ev.target.checked) {\n      task.completed = true;\n      updateTask(task);\n    } else {\n      task.completed = false;\n      updateTask(task);\n    }\n  }\n\n  return (\n    <ListGroup.Item id = {task.id}>\n      <div className=\"d-flex w-100 justify-content-between\">\n          <div className=\"custom-control custom-checkbox\">\n            <input type=\"checkbox\" className={task.important ? \"custom-control-input important\" : \"custom-control-input\"} id={\"check-t\" +  task.id} defaultChecked = {task.completed} onChange = {(ev) => onChangeTask(ev,task)}/>\n            <label className=\"custom-control-label\"  htmlFor={\"check-t\" +  task.id} >{task.description}</label>\n            <span className=\"badge badge-success ml-4\">{task.project}</span>\n          </div>\n          {!task.privateTask && (\n                <svg className=\"bi bi-person-square\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fillRule=\"evenodd\" d=\"M14 1H2a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V2a1 1 0 00-1-1zM2 0a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V2a2 2 0 00-2-2H2z\" clipRule=\"evenodd\"/>\n                  <path fillRule=\"evenodd\" d=\"M2 15v-1c0-1 1-4 6-4s6 3 6 4v1H2zm6-6a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"/>\n                </svg>)}\n\n          {task.deadline &&  (\n            <small className = {task.deadline.isBefore(moment()) ? \"date bg-danger text-white\" : \"date\"}>{task.deadline.format(\"dddd, MMMM Do YYYY, h:mm:ss a\")} </small>\n          )}\n          \n          <div>\n            <Image width=\"20\" height=\"20\" className=\"img-button\" src=\"svg/edit.svg\" alt =\"\" onClick={() => editTask(task)}/>\n            <Image width=\"20\" height=\"20\" className=\"img-button\" src=\"svg/delete.svg\" alt =\"\" onClick={() => deleteTask(task)}/>\n          </div>\n\n        </div>\n    </ListGroup.Item>\n  );\n}\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst TodoList = (props) => {\n\n  let {tasks, editTask, updateTask, deleteTask} = props;\n\n  return (\n    <>\n      {tasks && \n      <ListGroup as=\"ul\" variant=\"flush\">\n        {tasks.map((task) => <TodoItem key = {task.id} task = {task} editTask = {editTask} updateTask = {updateTask} deleteTask = {deleteTask} />) }\n      </ListGroup>}\n    </>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport moment from 'moment';\nimport { Redirect, Link } from 'react-router-dom';\n\nclass TodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    if (this.props.task) {\n      this.state = { ...this.props.task };\n      if (this.props.task.deadline) {\n        this.state.deadlineDate = this.props.task.deadline.format(\"YYYY-MM-DD\");\n        this.state.deadlineTime = this.props.task.deadline.format(\"HH:mm\");\n      }\n    } else {\n      this.state = { description: '', project: '', important: false, privateTask: true, deadlineDate: '', deadlineTime: '' };\n    }\n  }\n\n  updateField = (name, value) => {\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      form.reportValidity();\n    } else {\n      let task = Object.assign({}, this.state);\n      // set a single deadline\n      if (task.deadlineDate !== \"\" && task.deadlineTime !== \"\")\n        task.deadline = moment(task.deadlineDate + \" \" + task.deadlineTime);\n      else if (task.deadlineDate !== \"\")\n        task.deadline = moment(task.deadlineDate);\n\n      this.props.addOrEditTask(task);\n      this.props.toggleModal();\n    }\n  }\n\n  render() {\n    if (!this.props.modalOpen) return <Redirect to='/'/>;\n    return (\n      <Modal show={this.props.modalOpen} onHide={this.props.toggleModal} animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add a Task</Modal.Title>\n        </Modal.Header>\n        <Form method=\"POST\" onSubmit={(event) => this.handleSubmit(event)}>\n          <Modal.Body>\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control type=\"text\" name=\"description\" placeholder=\"Type a description...\" value={this.state.description} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} required autoFocus />\n            </Form.Group>\n\n            <Form.Group controlId=\"project\">\n              <Form.Label>Project</Form.Label>\n              <Form.Control type=\"text\" name=\"project\" placeholder=\"Type a project for the task...\" value={this.state.project} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"important\">\n              <Form.Check type=\"checkbox\" label=\"Important\" id=\"important\" name=\"important\" checked={this.state.important} onChange={(ev) => this.updateField(ev.target.name, ev.target.checked)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"private\">\n              <Form.Check type=\"checkbox\" label=\"Private\" id=\"private\" name=\"privateTask\" onChange={(ev) => this.updateField(ev.target.name, ev.target.checked)} checked={this.state.privateTask} />\n            </Form.Group>\n\n            <Form.Group controlId=\"deadline-date\">\n              <Form.Label>Deadline</Form.Label>\n              <Form.Control type=\"date\" name=\"deadlineDate\" value={this.state.deadlineDate} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"deadline-time\">\n              <Form.Control type=\"time\" name=\"deadlineTime\" value={this.state.deadlineTime} onChange={(ev) => this.updateField(ev.target.name, ev.target.value)} />\n            </Form.Group>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Link to='/' >\n              <Button variant=\"primary\" type=\"submit\">{this.state.id ? 'Update' : 'Add'}</Button>\n            </Link>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    );\n\n  }\n}\n\nexport default TodoForm;","import moment from 'moment';\n\nclass Task{    \n\n    constructor(id, description, important, privateTask, deadline, project, completed) {\n        if(id){\n            this.id = id;\n        }\n            \n        this.description = description;\n        this.important = important;\n        this.privateTask = privateTask;\n\n        if(deadline !== undefined){\n            this.deadline = moment(new Date(deadline));\n        }\n        if(project){\n            this.project = project;\n        }\n        this.completed = completed || false;\n\n    }\n\n    /**\n     * Construct a Task from a plain object\n     * @param {{}} json \n     * @return {Task} the newly created Task object\n     */\n    static from(json) {\n        const t =  Object.assign(new Task(), json);\n        if(t.deadline){\n            t.deadline = moment(new Date(t.deadline));\n        }\n        return t;\n    }\n\n}\n\nexport default Task;\n\n","import Task from './Task';\nconst baseURL = \"/api\";\n\nasync function getTasks(filter) {\n    let url = \"/tasks\";\n    if(filter){\n        const queryParams = \"?filter=\" + filter;\n        url += queryParams;\n    }\n    const response = await fetch(baseURL + url);\n    const tasksJson = await response.json();\n    if(response.ok){\n        //return tasksJson.map((t) => Task.from(t));\n        return tasksJson.map((t) => new Task(t.id,t.description,t.important, t.privateTask,t.deadline,t.project, t.completed));\n    } else {\n        throw tasksJson;  // An object with the error coming from the server\n    }\n}\n\nasync function addTask(task) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + \"/tasks\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task),\n        }).then( (response) => {\n            if(response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                .then( (obj) => {reject(obj);} ) // error msg in the response body\n                .catch( (err) => {reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch( (err) => {reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\nasync function updateTask(task) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + \"/tasks/\" + task.id, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(task),\n        }).then( (response) => {\n            if(response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                .then( (obj) => {reject(obj);} ) // error msg in the response body\n                .catch( (err) => {reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch( (err) => {reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\n\nasync function deleteTask(taskId) {\n    return new Promise((resolve, reject) => {\n        fetch(baseURL + \"/tasks/\" + taskId, {\n            method: 'DELETE'\n        }).then( (response) => {\n            if(response.ok) {\n                resolve(null);\n            } else {\n                // analyze the cause of error\n                response.json()\n                .then( (obj) => {reject(obj);} ) // error msg in the response body\n                .catch( (err) => {reject({ errors: [{ param: \"Application\", msg: \"Cannot parse server response\" }] }) }); // something else\n            }\n        }).catch( (err) => {reject({ errors: [{ param: \"Server\", msg: \"Cannot communicate\" }] }) }); // connection errors\n    });\n}\n\nconst API = { getTasks,addTask, updateTask,deleteTask} ;\nexport default API;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Filters from './components/Filters';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport API from './api/API';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { tasks: [], projects: [], filter: 'All', openMobileMenu: false, modalOpen: false, editedTask: null };\n  }\n\n  getProjects(tasks) {\n    return [...new Set(tasks.map((task) => {\n      if (task.project)\n        return task.project;\n      else\n        return null;\n    }))];\n  }\n\n  componentDidMount() {\n    // fake loading the tasks from the API server, and create the projects list\n    API.getTasks().then((tasks) => this.setState({ tasks: tasks, projects: this.getProjects(tasks) }));\n  }\n\n  toggleModal = () => {\n    this.setState((state) => ({ modalOpen: !state.modalOpen, editedTask: null }));\n  }\n\n  showSidebar = () => {\n    this.setState((state) => ({ openMobileMenu: !state.openMobileMenu }));\n  }\n\n  filterTasks = (filter, project) => {\n    switch (filter) {\n      case 'filter-important':\n        API.getTasks('important').then((tasks) => this.setState({ tasks: tasks, filter: 'Important' }));\n        break;\n      case 'filter-today':\n        API.getTasks('today').then((tasks) => this.setState({ tasks: tasks, filter: 'Today' }));\n        break;\n      case 'filter-week':\n        API.getTasks('week').then((tasks) => this.setState({ tasks: tasks, filter: 'Next Week' }));\n        break;\n      case 'filter-private':\n        API.getTasks('private').then((tasks) => this.setState({ tasks: tasks, filter: 'Private' }));\n        break;\n      case 'filter-shared':\n        API.getTasks('shared').then((tasks) => this.setState({ tasks: tasks, filter: 'Shared' }));\n        break;\n      case 'filter-project':\n        API.getTasks(project).then((tasks) => this.setState({ tasks: tasks, filter: project }));\n        break;\n      default:\n        API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All' }));\n        break;\n    }\n  }\n\n  addOrEditTask = (task) => {\n    if (!task.id) {\n      //ADD\n      API.addTask(task)\n        .then(() => {\n          //get the updated list of tasks from the server\n          API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All', projects: this.getProjects(tasks) }));\n        })\n        .catch((errorObj) => {\n\n        });\n    } else {\n      //UPDATE\n      API.updateTask(task)\n        .then(() => {\n          //get the updated list of tasks from the server\n          API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All', projects: this.getProjects(tasks) }));\n        })\n        .catch((errorObj) => {\n\n        });\n    }\n  }\n\n  editTask = (task) => {\n    this.toggleModal();\n    this.setState({ editedTask: task });\n  }\n\n  deleteTask = (task) => {\n    API.deleteTask(task.id)\n      .then(() => {\n        //get the updated list of tasks from the server\n        API.getTasks().then((tasks) => this.setState({ tasks: tasks, filter: 'All', projects: this.getProjects(tasks) }));\n      })\n      .catch((errorObj) => {\n\n      });\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n            <Header showSidebar={this.showSidebar} />\n            <Container fluid>\n              <Row className=\"vheight-100\">\n                <Collapse in={this.state.openMobileMenu}>\n                  <Col sm={4} bg=\"light\" id=\"left-sidebar\" className=\"collapse d-sm-block below-nav\">\n                    <Filters projects={this.state.projects} filterTasks={this.filterTasks} activeFilter={this.state.filter} />\n                  </Col>\n                </Collapse>\n                <Col sm={8} className=\"below-nav\">\n                  <Route path='/'>\n                    <h1>{this.state.filter}</h1>\n                    <TodoList tasks={this.state.tasks} editTask={this.editTask} updateTask={this.addOrEditTask} deleteTask={this.deleteTask} />\n                    <Link to='/add'>\n                      <Button variant=\"success\" size=\"lg\" className=\"fixed-right-bottom\" onClick={this.toggleModal}>&#43;</Button>\n                    </Link>\n                  </Route>\n                </Col>\n                  {this.state.modalOpen && <TodoForm modalOpen={this.state.modalOpen} toggleModal={this.toggleModal} addOrEditTask={this.addOrEditTask} task={this.state.editedTask} />}\n              </Row>\n            </Container>\n        </Router>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}